/**
 * Copyright 2011 Adrian Witas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.abstractmeta.code.g.core.code;



import org.abstractmeta.code.g.code.JavaMethod;
import org.abstractmeta.code.g.code.JavaModifier;
import org.abstractmeta.code.g.code.JavaParameter;
import org.abstractmeta.code.g.code.JavaType;

import java.lang.annotation.Annotation;
import java.lang.reflect.Type;
import java.util.List;


/**
 * Provides implementation of interface org.abstractmeta.toolbox.code.JavaMethod
 * This class has been auto generated by g-toolbox.
 */
public class JavaMethodImpl implements JavaMethod {

    private final List<JavaParameter> parameters;

    private final List<Type> exceptionTypes;

    private final List<String> body;

    private final Type resultType;

    private final List<JavaType> javaTypes;

    private final List<JavaModifier> modifiers;

    private final String name;

    private final List<Annotation> annotations;

    private final List<String> documentation;

    public JavaMethodImpl(List<JavaParameter> parameters, List<Type> exceptionTypes, List<String> body, Type resultType, List<JavaType> javaTypes, List<JavaModifier> modifiers, String name, List<Annotation> annotations, List<String> documentation) {
        this.parameters = parameters;
        this.exceptionTypes = exceptionTypes;
        this.body = body;
        this.resultType = resultType;
        this.javaTypes = javaTypes;
        this.modifiers = modifiers;
        this.name = name;
        this.annotations = annotations;
        this.documentation = documentation;
    }


    @Override
    public List<JavaParameter> getParameters() {
        return parameters;
    }

    @Override
    public List<Type> getExceptionTypes() {
        return exceptionTypes;
    }

    public List<String> getBodyLines() {
        return this.body;
    }

    public Type getResultType() {
        return this.resultType;
    }

    public List<JavaType> getNestedJavaTypes() {
        return this.javaTypes;
    }

    public List<JavaModifier> getModifiers() {
        return this.modifiers;
    }

    public String getName() {
        return this.name;
    }

    public List<Annotation> getAnnotations() {
        return this.annotations;
    }

    public List<String> getDocumentation() {
        return this.documentation;
    }

}