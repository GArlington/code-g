
unit_1.descriptor_1.options.commandHandler = org.abstractmeta.code.g.core.handler.plugin.CommandPluginHandler

unit_1.descriptor_1.options.commandHandler.interface =  org.abstractmeta.commandify.Commandify<ownerSuperType>
unit_1.descriptor_1.options.commandHandler.addCommandMethod = commands.add(command)
unit_1.descriptor_1.options.commandHandler.commandRegistryField = org.abstractmeta.commandify.command.Commands<ownerSuperType>:commands:org.abstractmeta.commandify.core.CommandsImpl<ownerSuperType>(ownerSuperType, constructorCommand)


unit_1.descriptor_1.options.commandHandler.valueWrapper[java.util.Map] = org.abstractmeta.commandify.core.command.CommandifyMap<K, V>(value)
unit_1.descriptor_1.options.commandHandler.valueWrapper[java.util.Collection] = org.abstractmeta.commandify.core.command.CommandifyCollection<V>(value)
unit_1.descriptor_1.options.commandHandler.fieldCommandSuperType = org.abstractmeta.commandify.core.command.AbstractFieldCommand<ownerSuperType, fieldType>(fieldName, value, previousValue)
unit_1.descriptor_1.options.commandHandler.methodCommandSuperType = org.abstractmeta.commandify.core.command.AbstractMethodCommand<ownerSuperType>(methodName, values)
unit_1.descriptor_1.options.commandHandler.constructorCommandSuperType = org.abstractmeta.commandify.core.command.AbstractConstructorCommand<ownerSuperType>(types, values)

unit_1.descriptor_1.sourceClasses = org.abstractmeta.code.g.core.test.AMessage, org.abstractmeta.code.g.core.test.IMessage
unit_1.descriptor_1.plugin = org.abstractmeta.code.g.core.plugin.ClassGeneratorPlugin
unit_1.targetDirectory = target/auto-generated/code-g/super/