/**
 * Copyright 2011 Adrian Witas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.abstractmeta.code.g.core.code;


import org.abstractmeta.code.g.code.JavaConstructor;

import java.lang.annotation.Annotation;
import java.lang.reflect.Type;
import java.util.List;


/**
 * Provides implementation of interface org.abstractmeta.toolbox.code.JavaConstructor
 * This class has been auto generated by g-toolbox.
 */
public class JavaConstructorImpl implements JavaConstructor {


    private final List<String> parameterModifiers;

    private final List<Type> parameterTypes;

    private final List<String> parameterNames;

    private final List<Type> exceptionTypes;

    private final List<String> body;

    private final List<String> modifiers;

    private final String name;

    private final List<Annotation> annotations;

    private final List<String> documentation;

    public JavaConstructorImpl(List<String> parameterModifiers, List<Type> parameterTypes, List<String> parameterNames, List<Type> exceptionTypes, List<String> body, List<String> modifiers, String name, List<Annotation> annotations, List<String> documentation) {
        this.parameterModifiers = parameterModifiers;
        this.parameterTypes = parameterTypes;
        this.parameterNames = parameterNames;
        this.exceptionTypes = exceptionTypes;
        this.body = body;
        this.modifiers = modifiers;
        this.name = name;
        this.annotations = annotations;
        this.documentation = documentation;
    }

    public List<Type> getParameterTypes() {
        return this.parameterTypes;
    }

    @Override
    public List<String> getParameterNames() {
        return this.parameterNames;
    }

    @Override
    public List<Type> getExceptionTypes() {
        return exceptionTypes;
    }

    public List<String> getBody() {
        return this.body;
    }

    public List<String> getModifiers() {
        return this.modifiers;
    }

    @Override
    public List<String> getParameterModifiers() {
        return parameterModifiers;
    }

    public String getName() {
        return this.name;
    }

    public List<Annotation> getAnnotations() {
        return this.annotations;
    }

    public List<String> getDocumentation() {
        return this.documentation;
    }

}