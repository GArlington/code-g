package org.abstractmeta.code.g.examples.model4.impl;

import java.util.HashMap;
import java.util.Map;
import org.abstractmeta.code.g.examples.model4.Employee;
import org.abstractmeta.code.g.examples.model4.EmployeeRegistry1;
/**
 * This source code was automatically generated by code-g plugin.
 */

public class EmployeeRegistry1Impl implements EmployeeRegistry1 {
    private final Map<Integer, Map<String, Map<String, Employee>>> registry;

    public EmployeeRegistry1Impl(Map<Integer, Map<String, Map<String, Employee>>> registry) {
        this.registry = registry;
    }

    protected <K, V> Map<K, V> createMap() {
        return new HashMap<K, V>();
    }

    public void register(int argument0, String argument1, String argument2, Employee argument3) {
        Map<String, Map<String, Employee>> registryArgument0 = registry.get(argument0);
        if(registryArgument0 == null) {
            registryArgument0 = createMap();
            registry.put(argument0, registryArgument0);
        }
        Map<String, Employee> registryArgument0Argument1 = registryArgument0.get(argument1);
        if(registryArgument0Argument1 == null) {
            registryArgument0Argument1 = createMap();
            registryArgument0.put(argument1, registryArgument0Argument1);
        }
        registryArgument0Argument1.put(argument2, argument3);
    }

    public Employee get(int argument0, String argument1, String argument2) {
        Map<String, Map<String, Employee>> registryArgument0 = registry.get(argument0);
        if(registryArgument0 == null) {
            return null;
        }
        Map<String, Employee> registryArgument0Argument1 = registryArgument0.get(argument1);
        if(registryArgument0Argument1 == null) {
            return null;
        }
        return registryArgument0Argument1.get(argument2);
    }

    public Map<Integer, Map<String, Map<String, Employee>>> getRegistry() {
        return this.registry;
    }

}